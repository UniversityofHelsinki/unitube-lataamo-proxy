image: node:12-alpine

# Cache node modules - speeds up future builds
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules

# Define the stages
stages:
  - setup
  - build
  - audit_scan
  - test
  - deploy

# Define the process for each stage

# Define the process for setup stage
setup:
  stage: setup
  tags:
    - ohtu-build-1
  script:
    - npm install

# Define the process for build stage
build:
  stage: build
  tags:
    - ohtu-build-1
  script:
    - npm run build

# Define the process for test stage
test:
  stage: test
  tags:
    - ohtu-build-1
  script:
    - npm run coverage
  coverage: /All files\s*\|\s*([\d\.]+)/

# Define the process for deploy stage to development environment
deploy_dev:
  stage: deploy
  tags:
    - ohtu-build-1
  environment:
    name: development
  only:
    - master
  except:
    # Skip deploy when scheduled npm audit and outdated scans are executed.
    - schedules
  script:
    - echo "====== Deploy to development server ========"
    - echo "====== Install rsync and openssh ========="
    - apk add --no-cache rsync openssh
    - echo "====== Activate the ssh-agent ========"
    - eval $(ssh-agent -s)
    - echo "======= Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store ====="
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - echo "====== Add target servers secret key ======"
    - mkdir ~/.ssh
    - echo $SSH_PRIVATE_KEY  >> ~/.ssh/id_rsa
    - chmod 700 ~/.ssh && chmod 600 ~/.ssh/*
    - echo "====== Test ssh connection and make api folder if not exist ======"
    - ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -T lataamo@lataamo-dev.it.helsinki.fi "mkdir -p /home/lataamo/proxy"
    - echo "====== Sync local and remote directory ======"
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - rsync -azPq -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" --exclude=".env" --exclude="/api/uploads" --exclude="/logs" --exclude="/files/licenses.json" --delete ./ lataamo@lataamo-dev.it.helsinki.fi:/home/lataamo/proxy
    - ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -T lataamo@lataamo-dev.it.helsinki.fi "pm2 restart app"

# Define the process for deploy stage to test environment
deploy_test:
  stage: deploy
  tags:
    - ohtu-build-1
  environment:
    name: test
  only:
    - test
  script:
    - echo "====== Deploy to test server ========"
    - echo "====== Install rsync and openssh ========="
    - apk add --no-cache rsync openssh
    - echo "====== Activate the ssh-agent ========"
    - eval $(ssh-agent -s)
    - echo "======= Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store ====="
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - echo "====== Add target servers secret key ======"
    - mkdir ~/.ssh
    - echo $SSH_PRIVATE_KEY  >> ~/.ssh/id_rsa
    - chmod 700 ~/.ssh && chmod 600 ~/.ssh/*
    - echo "====== Test ssh connection and make api folder if not exist ======"
    - ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -T lataamo@lataamo-test.it.helsinki.fi "mkdir -p /home/lataamo/proxy"
    - echo "====== Sync local and remote directory ======"
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - rsync -azPq -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" --exclude=".env" --exclude="/api/uploads" --exclude="/logs" --exclude="/files/licenses.json"  --delete ./ lataamo@lataamo-test.it.helsinki.fi:/home/lataamo/proxy
    - ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -T lataamo@lataamo-test.it.helsinki.fi "pm2 restart app"

# Define the process for deploy stage to test environment
deploy_prod:
  stage: deploy
  tags:
    - ohtu-build-1
  environment:
    name: prod
  only:
    - prod
  when: manual
  script:
    - echo "====== Deploy to production server ========"
    - echo "====== Install rsync and openssh ========="
    - apk add --no-cache rsync openssh
    - echo "====== Activate the ssh-agent ========"
    - eval $(ssh-agent -s)
    - echo "======= Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store ====="
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - echo "====== Add target servers secret key ======"
    - mkdir ~/.ssh
    - echo $SSH_PRIVATE_KEY  >> ~/.ssh/id_rsa
    - chmod 700 ~/.ssh && chmod 600 ~/.ssh/*
    - echo "====== Test ssh connection and make api folder if not exist ======"
    - ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -T lataamo@lataamo-prod.it.helsinki.fi "mkdir -p /home/lataamo/proxy"
    - echo "====== Sync local and remote directory ======"
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - rsync -azPq -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" --exclude=".env" --exclude="/api/uploads" --exclude="/logs" --exclude="/files/licenses.json"  --delete ./ lataamo@lataamo-prod.it.helsinki.fi:/home/lataamo/proxy
    - ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -T lataamo@lataamo-prod.it.helsinki.fi "NODE_ENV=production pm2 restart app"

# Rules for the scheduled npm audit and outdated scans
dependency scanning:
  stage: audit_scan
  tags:
    - ohtu-build-1
  allow_failure: true
  only:
    - schedules
  before_script:
    - apk add --no-cache curl
  script:
    # Run npm audit and npm outdated commands and write outputs to a txt file.
    - echo "Running npm diagnostics, audit and outdated..."
    - export RESULT_FILE="npm_scan_results.txt"
    - pwd
    # Write result file
    - touch ./$RESULT_FILE
    - npm audit > $RESULT_FILE
    - echo "" >> $RESULT_FILE
    - echo "" >> $RESULT_FILE
    - echo "                   === npm outdated report ===" >> $RESULT_FILE
    - echo "" >> $RESULT_FILE
    - npm outdated >> $RESULT_FILE
    - cat $RESULT_FILE
    - ls -al
    - echo "Done with npm diagnostics."
    - echo "Sending results to Slack..."
    # Send result file to "audit-logs" channel in Ohtu's Slack space (see https://api.slack.com/methods/files.upload).
    - "curl -F file=@${CI_PROJECT_DIR}/npm_audit_result.txt -F 'initial_comment=Unitube Lataamo-proxy npm report' -F channels=C01KV33GE90 -F filename=npm_audit_result.txt -F filetype=text -H 'Authorization: Bearer '${SLACK_FILE_UPLOAD_TOKEN} https://slack.com/api/files.upload"
    - echo "Done with sending results to Slack."
